@page "/Login"
@inject IAuthService AuthService
@inject NavigationManager Nav
@inject ISnackbar snackBar

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <div class="d-flex justify-center">
         <MudImage Src="images\logo.png" ObjectFit="@ImageFit" Height="300" Width="300"/>
    </div>

    <MudGrid>
        <MudSpacer />
        <MudItem xs="12" sm="3">
            <MudCard Elevation="5">
                <MudCardContent>
                    <MudText Typo="Typo.h5" Align="Align.Center">Login</MudText>
                    <MudTextField Label="Email"
                                  @bind-Value="model.Email" For="@(() => model.Email)"/>                 
                    <MudTextField Label="Password"  Class="mt-3"
                                  @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password"/>
                </MudCardContent>
                <MudCardActions>
                    <MudSpacer />
                    <MudButton ButtonType="ButtonType.Submit" Disabled="isLoading"
                               Variant="Variant.Outlined" Color="Color.Primary" Class="ml-auto">
                        @if (isLoading)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                            <MudText>Connecting</MudText>
                        }
                        else
                        {
                            <MudText>Connect</MudText>
                        }
                    </MudButton>

                    <MudSpacer />
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudSpacer />
    </MudGrid>
</EditForm>

<MudStack Row Class="my-4">
    <MudSpacer />
    <MudIcon Icon="@Icons.Material.Filled.HorizontalRule" Color="Color.Primary" Size="Size.Large"/>
    <MudText Typo="Typo.subtitle1" Class="my-1">OR</MudText>
    <MudIcon Icon="@Icons.Material.Filled.HorizontalRule" Color="Color.Primary" Size="Size.Large" />
    <MudSpacer />
</MudStack>


<MudText Align="Align.Center">Don't have an account?<MudLink Href="/Register">Signup</MudLink></MudText>


@code {
    LoginDto model = new();
    DefaultFocus DefaultFocus { get; set; } = DefaultFocus.FirstChild;
    ObjectFit ImageFit = ObjectFit.ScaleDown;
    bool isLoading;

    async Task OnValidSubmit()
    {
        isLoading = true;

        CustomResponse<UserDto> response = await AuthService.LoginAsync(model);
        if (response.IsSuccessful)
        {
            Nav.NavigateTo("", false);
        }
        else
            snackBar.Add(response.Message, Severity.Error);


        isLoading = false;
    }
}